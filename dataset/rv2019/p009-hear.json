{
    "source": "https://devpost.com/software/hear",
    "title": "heAR",
    "blurb": "heAR: An Augmented Reality Visualizer for the Hearing Impaired",
    "awards": [
        "Best in Mobility & Communications"
    ],
    "videos": [
        "https://www.youtube.com/embed/sfkNcNDVAXs?enablejsapi=1&hl=en_US&rel=0&start=&version=3&wmode=transparent"
    ],
    "images": [],
    "team": [
        {
            "name": "Joanna Liu",
            "about": "Worked on Magic Leap + Unity set up and integration, wireframing, product/user flow definition, visual assets, presentation and video. ",
            "photo": "//challengepost-s3-challengepost.netdna-ssl.com/photos/production/user_photos/000/936/177/datas/profile.jpeg"
        },
        {
            "name": "Richard Gao",
            "about": "Worked on syncing Magic Leap controls with the user experience, as well as building the raycast system to interact with the environment. Handled speech bubble placement at end-point of raycast, and populating the bubbles with text.",
            "photo": "https://avatars1.githubusercontent.com/u/26847285?height=180&v=4&width=180"
        },
        {
            "name": "Mustafa Eyceoz",
            "about": "Worked on basic Magic Leap set up, integration, and development, as well as various event triggers, actions, scripts, and objects for the project through Unity. Had basic game dev experience with Unity before and decently familiar with C#, but had to start from scratch with AR/VR development.",
            "photo": "//challengepost-s3-challengepost.netdna-ssl.com/photos/production/user_photos/000/745/234/datas/profile.png"
        },
        {
            "name": "Ziyan  Ma",
            "about": "",
            "photo": "https://res.cloudinary.com/devpost/image/upload/b_transparent,c_pad,g_center,h_150,w_150/v1484894676/rkwvqwamskl6szbscnp0.png?height=180&width=180"
        },
        {
            "name": "Devanshi Udeshi",
            "about": "",
            "photo": "https://avatars2.githubusercontent.com/u/46818550?height=180&v=4&width=180"
        }
    ],
    "built_with": [
        "flask",
        "gcloud",
        "ibm-watson",
        "keras",
        "magic-leap",
        "photoshop",
        "unity"
    ],
    "content_html": "<div>\n<h2>Inspiration:</h2>\n<p>heAR was born out of our team's desire to create an AR application that would positively impact the lives of hearing impaired individuals. </p>\n<h2>What it does:</h2>\n<p>heAR facilitates conversation between a hearing impaired individual and individuals with normal hearing using speech to text translation and American Sign Language to text translation. The hearing impaired individual will wear the Magic Leap 1 headset and point their controller towards the person who is speaking and push down the trigger button on the controller for the device to begin translating and displaying text. A speech bubble with the text will appear next to the person who is speaking, so that the hearing impaired individual may participate in a verbal conversation with others. In addition, messages will be recorded under a message history option.</p>\n<h2>How we built it:</h2>\n<p>We use Magic Leap SDK for Unity and also Lumin SDK to build up the AR experience, including space scanning, object overlaying for our speech bubbles and ray-casting for human recognition. </p>\n<p>We used IBM Watson API and Watson's Unity SDK for speech to text recognition, and a custom CNN for gesture / sign language recognition.</p>\n<p>We use keras and dataset from kaggle to train a VGG network and host it on Google Cloud Services using Flask, which provides Restful API endpoint to communicate with magic leap. </p>\n<p>We use AfterEffect, Illustrator, C4D, and Blender to build custom assets and animation. </p>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>For most of us, it was our first time working on an VR/AR project.</li>\n<li>Cycle of learning then implementing throughout the 2.5 days.</li>\n<li>Networking in Unity is very painful and challenging.</li>\n<li>Magic Leap SDK setup and installation.</li>\n<li>Magic Leap device integration.</li>\n<li>Integrating custom AI solution in AR project.</li>\n<li>Having to adapt to new technology that we had never seen/used before.</li>\n</ul>\n<h2>Accomplishments that we're proud of:</h2>\n<ul>\n<li>We were able to produce a fully functional prototype in two and a half days and integrate it with the Magic Leap system. </li>\n<li>We had a great team dynamic and worked well to balance out our strengths and weaknesses. </li>\n<li>Most importantly, we had the opportunity to learn from each other and the mentors to take away some valuable skills from the Reality Virtually Hackathon. </li>\n</ul>\n<h2>What we learned:</h2>\n<ul>\n<li>For most of us, it was our first time working on an VR/AR project, so we worked together to build a working MVP.</li>\n<li>A lot of technical skills including Unity, Magic Leap, IBM Watson, GCP and Neural Network. </li>\n</ul>\n<h2>What's next for heAR:</h2>\n<ul>\n<li>We aim to implement facial recognition into the system to detect when a human face appears in the frame.</li>\n<li>Figure out and implement audio location automatically (auto-place bubbles).</li>\n<li>Make great improvements to the UI/aesthetic for the most pleasant/non-intrusive experience possible.</li>\n<li>Continue working to build our MVP into a product.</li>\n</ul>\n</div>",
    "content_md": "\n## Inspiration:\n\n\nheAR was born out of our team's desire to create an AR application that would positively impact the lives of hearing impaired individuals. \n\n\n## What it does:\n\n\nheAR facilitates conversation between a hearing impaired individual and individuals with normal hearing using speech to text translation and American Sign Language to text translation. The hearing impaired individual will wear the Magic Leap 1 headset and point their controller towards the person who is speaking and push down the trigger button on the controller for the device to begin translating and displaying text. A speech bubble with the text will appear next to the person who is speaking, so that the hearing impaired individual may participate in a verbal conversation with others. In addition, messages will be recorded under a message history option.\n\n\n## How we built it:\n\n\nWe use Magic Leap SDK for Unity and also Lumin SDK to build up the AR experience, including space scanning, object overlaying for our speech bubbles and ray-casting for human recognition. \n\n\nWe used IBM Watson API and Watson's Unity SDK for speech to text recognition, and a custom CNN for gesture / sign language recognition.\n\n\nWe use keras and dataset from kaggle to train a VGG network and host it on Google Cloud Services using Flask, which provides Restful API endpoint to communicate with magic leap. \n\n\nWe use AfterEffect, Illustrator, C4D, and Blender to build custom assets and animation. \n\n\n## Challenges we ran into\n\n\n* For most of us, it was our first time working on an VR/AR project.\n* Cycle of learning then implementing throughout the 2.5 days.\n* Networking in Unity is very painful and challenging.\n* Magic Leap SDK setup and installation.\n* Magic Leap device integration.\n* Integrating custom AI solution in AR project.\n* Having to adapt to new technology that we had never seen/used before.\n\n\n## Accomplishments that we're proud of:\n\n\n* We were able to produce a fully functional prototype in two and a half days and integrate it with the Magic Leap system.\n* We had a great team dynamic and worked well to balance out our strengths and weaknesses.\n* Most importantly, we had the opportunity to learn from each other and the mentors to take away some valuable skills from the Reality Virtually Hackathon.\n\n\n## What we learned:\n\n\n* For most of us, it was our first time working on an VR/AR project, so we worked together to build a working MVP.\n* A lot of technical skills including Unity, Magic Leap, IBM Watson, GCP and Neural Network.\n\n\n## What's next for heAR:\n\n\n* We aim to implement facial recognition into the system to detect when a human face appears in the frame.\n* Figure out and implement audio location automatically (auto-place bubbles).\n* Make great improvements to the UI/aesthetic for the most pleasant/non-intrusive experience possible.\n* Continue working to build our MVP into a product.\n\n\n"
}