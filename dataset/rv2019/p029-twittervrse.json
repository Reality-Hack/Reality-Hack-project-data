{
    "source": "https://devpost.com/software/twittervrse",
    "title": "TwitterVRse",
    "blurb": "A new way to interact with tweets",
    "awards": [],
    "videos": [
        "https://www.youtube.com/embed/vNwWgMvNE1I?enablejsapi=1&hl=en_US&rel=0&start=&version=3&wmode=transparent"
    ],
    "images": [
        {
            "title": "View today&#39;s trending topics",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/350/datas/original.png"
        },
        {
            "title": "Welcome to the Twitter Universe!",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/351/datas/original.png"
        },
        {
            "title": "Four twitter birds are reading four trending tweets in the topic you just selected to you",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/352/datas/original.png"
        },
        {
            "title": "Point your hand at this block and pull the trigger to start speaking about your opinion!",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/353/datas/original.png"
        },
        {
            "title": "Your message has being recognized and shown in front of you!",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/345/datas/original.png"
        },
        {
            "title": "Your message/tweet is published on your Twitter account in real time!",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/347/datas/original.PNG"
        },
        {
            "title": "Tweets published by visitors at the hackathon Demo day (screenshotted 9P.M. Jan 21, 2019)",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/348/datas/original.PNG"
        },
        {
            "title": "The team (Austin Edelman, Lucy Yunxing Liao, Dana Elkis, Simon Zirui Guo, Rebecca Skurnik)",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/747/361/datas/original.jpg"
        },
        {
            "title": "Project logo",
            "src": "https://challengepost-s3-challengepost.netdna-ssl.com/photos/production/software_photos/000/748/706/datas/original.jpg"
        }
    ],
    "team": [
        {
            "name": "Simon Guo",
            "about": "I worked on creating interactions between users and unity objects, constructing classes and prefabs, and putting all components together.",
            "photo": "//challengepost-s3-challengepost.netdna-ssl.com/photos/production/user_photos/000/748/437/datas/profile.jpg"
        },
        {
            "name": "danaelkis",
            "about": "",
            "photo": "https://graph.facebook.com/10161214888000696/picture?height=180&width=180"
        },
        {
            "name": "Yunxing Liao",
            "about": "",
            "photo": "https://graph.facebook.com/1190682754413226/picture?height=180&width=180"
        },
        {
            "name": "REBECCA SKURNIK",
            "about": "",
            "photo": "https://www.gravatar.com/avatar/2c80d053042f74f865ca1457367a8334?d=https%3A%2F%2Fdevpost-challengepost.netdna-ssl.com%2Fassets%2Fdefaults%2Fno-avatar-180.png&s=180"
        },
        {
            "name": "Austin Edelman",
            "about": "",
            "photo": "https://www.gravatar.com/avatar/b159eb8bd72b7a1488b8699999604ad5?d=https%3A%2F%2Fdevpost-challengepost.netdna-ssl.com%2Fassets%2Fdefaults%2Fno-avatar-180.png&s=180"
        }
    ],
    "built_with": [
        "c#",
        "cinema4d",
        "cortana",
        "maya",
        "oculus",
        "oculus-integration",
        "twitter",
        "twity",
        "unity"
    ],
    "content_html": "<div>\n<h2>Team info</h2>\n<p>This project was created from Jan 18-20, 2019 at the <a href=\"https://rv2019.devpost.com/\" rel=\"nofollow\">Reality Virtually Hackathon at the MIT Media Lab</a>.</p>\n<ul>\n<li><strong>Simon (Zirui) Guo</strong>: I'm a high school senior currently studying in Toronto, Canada and I love attending hackathons to explore new technologies and build cool projects. Particularly, I want to explore better interactions between humans and machines.</li>\n<li><strong>Rebecca Skurnik</strong>: Rebecca is master's student at the Interactive Telecommunications Program at NYU. She is passionate about creative technology and working in the intersection of the physical and digital world.</li>\n<li><strong>Lucy Liao</strong>: I'm a sophomore majoring in computer science at MIT interested in learning more about virtual reality.</li>\n<li><strong>Austin Edelman</strong>: A sophomore at MIT interested in creating amazing virtual worlds that people can live in. Consequently, I decided to train and become a biomedical engineer, majoring in computer science and electrical engineering and choosing a pre-medical track.</li>\n<li><strong>Dana Elkis</strong>: Dana Elkis is a Graphic Designer / Visual Artist from Tel Aviv (Israel), currently living in New York City. Master student at Interactive Telecommunications Program, NYU, New York.</li>\n</ul>\n<h2>Judging information</h2>\n<ul>\n<li>Location: Table 22, 6th-floor Vive Lounge, Media Lab E14.</li>\n<li>Category: Art, Media and Entertainment.</li>\n</ul>\n<h2>Inspiration</h2>\n<p>We believe immersive technologies have the potential to upgrade our current experiences and we would like to experience it with social media. Social media posting has been mechanical and the same for every platform. We want to bring the experience to the next level by immersing the user in a Twitter universe and make them feel that they are apart of the Twitter community.</p>\n<h2>What it does</h2>\n<p>TwitterVRse is a Virtual Reality experience that seeks to transform the way that we interact with the social media platform Twitter. We have created a VR interface that allows users to access tweets using virtual birds, interact with tweets like physical media, and post your own tweets through voice input.</p>\n<h2>User experience</h2>\n<p>The video above demonstrates a complete session.</p>\n<ol>\n<li>The user puts on an Oculus Rift and uses controllers to open TwitterVRse.</li>\n<li>The top 5 trending topics will be listed, in descending order of popularities. This will correspond with the number of birds in a flock. Users point at \"continue\" to enter the next scene.</li>\n<li>The Twitter universe will be presented with 5 flocks of birds scattered around in the environment. Those flocks have different numbers of birds, which corresponds to the 5 trending topics listed before (e.g. flocks with 5 birds is the most trending topic). Users point at the flock that he/she wants to investigate by pressing down a trigger.</li>\n<li>The birds in the flock will come to the user and, one by one reads out tweets by converting text to speech. Once users finished listening to the tweets, he/she can press the trigger to enter the next scene.</li>\n<li>In this scene, the user can record his/her own opinion by starting the record button and holding down the trigger while speaking. The user's voice will be recognized as text and posted on his/her Twitter account immediately.</li>\n</ol>\n<h2>How we built it</h2>\n<ul>\n<li>Hardware: Oculus Rift system (headset, Touch controllers, trackers)</li>\n<li>Engine: Unity</li>\n<li>SDKs: Oculus Integration</li>\n<li>APIs: Twitter API (Twity), Microsoft Cortana (Windows Speech Recognition)</li>\n<li>Assets: Oculus Integrations, Boxophobic</li>\n<li>Modeling and animations: Cinema 4D, Autodesk Maya, Adobe Illustrator</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li><strong>Deciding on the platform to use</strong>: The hackathon provides too many options for us to experiment. We were not sure if we want to make this a mobile, VR, AR, or MR experience. We then settled on VR. Originally, we chose Oculus Go, yet the controller SDK had issues due to Unity versioning and the prototyping cycle was too lengthy. We then turn to the more stable option of using an Oculus Rift.<br/></li>\n<li><strong>Getting used to Unity and VR development</strong>: Most of the team has little prior experience with VR development. We had to learn many Unity-specific concepts, such as ray casting, setting user camera position, switching between scene, spawning prefabs with properties.</li>\n<li><strong>Pulling and Posting data with Twitter and incorporating voice engine (STT &amp; TTS)</strong>: We spent a lot of time on using Twitter API in Unity. The Twitter Unity integration is specific for Mobile. Luckily, we found <a href=\"https://github.com/toofusan/Twity\" rel=\"nofollow\">Twity</a>, a C# Twitter API client. We were also stuck on finding a speech-to-text engine, and Google cloud API and IBM Watson does not work well with Unity. We found a workaround using Windows Cortana since the headset is connected to a Windows machine. Due to the limitation of using only free assets, the only text-to-speech engine we found requires a different .NET version. We had to give up coding that features and instead we played pre-recorded audio files.</li>\n<li><strong>Bird animations</strong>: We found a free asset of birds with flapping wings, yet the algorithm was too complex to be included in our application. We then tried to animate our bird to flap its wing in Maya and import as an animation. However, animation import did not work.</li>\n</ul>\n<h2>Accomplishments that we are proud of</h2>\n<ul>\n<li><strong>Getting every component working together</strong>: In the end, we put models, environment, interactions, and backend into each scene and connected them seamlessly. We completed most of the features that we proposed.</li>\n<li><strong>Design and construct complicated multi-scene</strong>: We also needed to carry data between scenes, and we did that by carrying data in instances of the prefab models.</li>\n</ul>\n<h2>What we learned</h2>\n<ul>\n<li><strong>Learning Unity and all spectrum of the VR development process</strong>: For most of us, this is our first VR application. Thanks to the workshops and mentors, we overcame lots of issues with versioning, importing, and structuring components.</li>\n<li><strong>Learning how to work as a team with diverse skillsets</strong>: We had clear roles. Austin on audio, Lucy on Twitter APIs, Simon on interactions and putting Unity project together, Dana on designing, and Rebecca on animations. We cooperated well and held hourly update, and everything worked together in the end.</li>\n<li><strong>Exploring the best practices of developing projects</strong>: Before starting to construct the project, we played with various available tools to test their technical viability. A feature tree and UX diagram are drawn to layout the development road map. Then we started to build features one by one in components for easier debugging. We had the core unity environment testing on one machine and many feature branches to avoid Git issues.</li>\n</ul>\n<h2>What's next for TwitterVRse</h2>\n<ul>\n<li><strong>Better UI and UX</strong>: We would like to get the flapping wing animation working and let the birds move across the scene. Many of the interactions are developed from simple prototypes and their design can be improved. Instruction will also be useful to guide the user through the experience.</li>\n<li><strong>Platform Supports</strong>: We would like to add support for Oculus Go as it is designed as a new platform to interact with social media, and soon the most popular VR device. A mobile AR version will also make the experience more accessible.</li>\n<li><strong>Location-based visualizations</strong>: We also had the idea to see birds migrate based on the locations of the tweets, as a geo-based visualization of trending discussions.</li>\n</ul>\n<h2>Credit and Acknowledgement</h2>\n<p>We would like to particularly thank John La from Oculus, Wiley Corning from the MIT Media Lab, Louis DeScioli from Google, Madison Hight from Microsoft, and Jasmine Roberts from Unity for their mentorship during the hackathon.</p>\n</div>",
    "content_md": "\n## Team info\n\n\nThis project was created from Jan 18-20, 2019 at the [Reality Virtually Hackathon at the MIT Media Lab](https://rv2019.devpost.com/).\n\n\n* **Simon (Zirui) Guo**: I'm a high school senior currently studying in Toronto, Canada and I love attending hackathons to explore new technologies and build cool projects. Particularly, I want to explore better interactions between humans and machines.\n* **Rebecca Skurnik**: Rebecca is master's student at the Interactive Telecommunications Program at NYU. She is passionate about creative technology and working in the intersection of the physical and digital world.\n* **Lucy Liao**: I'm a sophomore majoring in computer science at MIT interested in learning more about virtual reality.\n* **Austin Edelman**: A sophomore at MIT interested in creating amazing virtual worlds that people can live in. Consequently, I decided to train and become a biomedical engineer, majoring in computer science and electrical engineering and choosing a pre-medical track.\n* **Dana Elkis**: Dana Elkis is a Graphic Designer / Visual Artist from Tel Aviv (Israel), currently living in New York City. Master student at Interactive Telecommunications Program, NYU, New York.\n\n\n## Judging information\n\n\n* Location: Table 22, 6th-floor Vive Lounge, Media Lab E14.\n* Category: Art, Media and Entertainment.\n\n\n## Inspiration\n\n\nWe believe immersive technologies have the potential to upgrade our current experiences and we would like to experience it with social media. Social media posting has been mechanical and the same for every platform. We want to bring the experience to the next level by immersing the user in a Twitter universe and make them feel that they are apart of the Twitter community.\n\n\n## What it does\n\n\nTwitterVRse is a Virtual Reality experience that seeks to transform the way that we interact with the social media platform Twitter. We have created a VR interface that allows users to access tweets using virtual birds, interact with tweets like physical media, and post your own tweets through voice input.\n\n\n## User experience\n\n\nThe video above demonstrates a complete session.\n\n\n1. The user puts on an Oculus Rift and uses controllers to open TwitterVRse.\n2. The top 5 trending topics will be listed, in descending order of popularities. This will correspond with the number of birds in a flock. Users point at \"continue\" to enter the next scene.\n3. The Twitter universe will be presented with 5 flocks of birds scattered around in the environment. Those flocks have different numbers of birds, which corresponds to the 5 trending topics listed before (e.g. flocks with 5 birds is the most trending topic). Users point at the flock that he/she wants to investigate by pressing down a trigger.\n4. The birds in the flock will come to the user and, one by one reads out tweets by converting text to speech. Once users finished listening to the tweets, he/she can press the trigger to enter the next scene.\n5. In this scene, the user can record his/her own opinion by starting the record button and holding down the trigger while speaking. The user's voice will be recognized as text and posted on his/her Twitter account immediately.\n\n\n## How we built it\n\n\n* Hardware: Oculus Rift system (headset, Touch controllers, trackers)\n* Engine: Unity\n* SDKs: Oculus Integration\n* APIs: Twitter API (Twity), Microsoft Cortana (Windows Speech Recognition)\n* Assets: Oculus Integrations, Boxophobic\n* Modeling and animations: Cinema 4D, Autodesk Maya, Adobe Illustrator\n\n\n## Challenges we ran into\n\n\n* **Deciding on the platform to use**: The hackathon provides too many options for us to experiment. We were not sure if we want to make this a mobile, VR, AR, or MR experience. We then settled on VR. Originally, we chose Oculus Go, yet the controller SDK had issues due to Unity versioning and the prototyping cycle was too lengthy. We then turn to the more stable option of using an Oculus Rift.\n* **Getting used to Unity and VR development**: Most of the team has little prior experience with VR development. We had to learn many Unity-specific concepts, such as ray casting, setting user camera position, switching between scene, spawning prefabs with properties.\n* **Pulling and Posting data with Twitter and incorporating voice engine (STT & TTS)**: We spent a lot of time on using Twitter API in Unity. The Twitter Unity integration is specific for Mobile. Luckily, we found [Twity](https://github.com/toofusan/Twity), a C# Twitter API client. We were also stuck on finding a speech-to-text engine, and Google cloud API and IBM Watson does not work well with Unity. We found a workaround using Windows Cortana since the headset is connected to a Windows machine. Due to the limitation of using only free assets, the only text-to-speech engine we found requires a different .NET version. We had to give up coding that features and instead we played pre-recorded audio files.\n* **Bird animations**: We found a free asset of birds with flapping wings, yet the algorithm was too complex to be included in our application. We then tried to animate our bird to flap its wing in Maya and import as an animation. However, animation import did not work.\n\n\n## Accomplishments that we are proud of\n\n\n* **Getting every component working together**: In the end, we put models, environment, interactions, and backend into each scene and connected them seamlessly. We completed most of the features that we proposed.\n* **Design and construct complicated multi-scene**: We also needed to carry data between scenes, and we did that by carrying data in instances of the prefab models.\n\n\n## What we learned\n\n\n* **Learning Unity and all spectrum of the VR development process**: For most of us, this is our first VR application. Thanks to the workshops and mentors, we overcame lots of issues with versioning, importing, and structuring components.\n* **Learning how to work as a team with diverse skillsets**: We had clear roles. Austin on audio, Lucy on Twitter APIs, Simon on interactions and putting Unity project together, Dana on designing, and Rebecca on animations. We cooperated well and held hourly update, and everything worked together in the end.\n* **Exploring the best practices of developing projects**: Before starting to construct the project, we played with various available tools to test their technical viability. A feature tree and UX diagram are drawn to layout the development road map. Then we started to build features one by one in components for easier debugging. We had the core unity environment testing on one machine and many feature branches to avoid Git issues.\n\n\n## What's next for TwitterVRse\n\n\n* **Better UI and UX**: We would like to get the flapping wing animation working and let the birds move across the scene. Many of the interactions are developed from simple prototypes and their design can be improved. Instruction will also be useful to guide the user through the experience.\n* **Platform Supports**: We would like to add support for Oculus Go as it is designed as a new platform to interact with social media, and soon the most popular VR device. A mobile AR version will also make the experience more accessible.\n* **Location-based visualizations**: We also had the idea to see birds migrate based on the locations of the tweets, as a geo-based visualization of trending discussions.\n\n\n## Credit and Acknowledgement\n\n\nWe would like to particularly thank John La from Oculus, Wiley Corning from the MIT Media Lab, Louis DeScioli from Google, Madison Hight from Microsoft, and Jasmine Roberts from Unity for their mentorship during the hackathon.\n\n\n"
}